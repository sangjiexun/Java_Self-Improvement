----------SpringMVC-----------
第一章 SSM整合
1.1 环境准备
1.1.1 创建数据库和表结构
1.1.2 创建Maven工程
1.1.3 导入坐标并建立依赖
      web依赖于service，service依赖于dao，dao依赖于domain
1.1.4 编写实体类 Account(继承 Serializable 接口) -> cn.itcast.domain
1.1.5 编写业务层(service)接口  AccountSevice (写两个方法) 
1.1.6 编写持久层(dao)接口 AccountDao (写两个方法 和 service层中的一样)

1.2 整合步骤
1.2.1 保证Spring框架在web工程中独立运行
1.2.1.1 第一步:编写spring配置文件并导入约束(在resources 下的springmvc.xml里面) 
        <!-- 开启注解扫描，要扫描的是service和dao层的注解，要忽略web层注解，因为web层让SpringMVC框架去管理 -->
	<context:component-scan base-package="cn.itcast">
	<!-- 配置要忽略的注解 -->
	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
1.2.1.2 第二步:使用注解配置业务层和持久层
        在service-impl-AccountServiceImpl 实现类中 编写 具体的业务代码 并且 
        @Autowired //这个注解就是spring可以自动帮你把bean里面引用的对象的setter/getter方法省略，它会自动帮你set/get
        private IAccountDao accountDa
1.2.1.3 第三步:测试spring能否独立运行
        @Test
	public void run1() {
	ApplicationContext ac = new
	ClassPathXmlApplicationContext("classpath:applicationContext.xml");
	AccountService as = (AccountService) ac.getBean("accountService");
	as.findAll();      
1.2.2 保证SpringMVC在web工程中独立运行
1.2.2.1 第一步: 在web.xml 中配置核心控制器(DispatcherServlet)
1.2.2.2 第二步: 编写SpringMVC的配置文件
	<!-- 扫描controller的注解，别的不扫描 -->
	<context:component-scan base-package="cn.itcast">
	<context:include-filter type="annotation"
	expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- 配置视图解析器 -->
	<bean id="viewResolver"
	4. 测试SpringMVC的框架搭建是否成功
	1. 编写index.jsp和list.jsp编写，超链接
	2. 创建AccountController类，编写方法，进行测试
	2. Spring整合SpringMVC的框架
	1. 目的：在controller中能成功的调用service对象中的方法。
	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!-- JSP文件所在的目录 -->
	<property name="prefix" value="/WEB-INF/pages/" />
	<!-- 文件的后缀名 -->
	<property name="suffix" value=".jsp" />
	</bean>
	<!-- 设置静态资源不过滤 -->
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<!-- 开启对SpringMVC注解的支持 -->
	<mvc:annotation-driven />  
     


































