package cn.sherlock.Collection;

public class Practice_7 {
    /*
    简述迭代器的实现原理
    Q:请简述迭代器的实现原理
    当遍历集合时，首先通过调用集合的iterator()方法获得迭代器对象，
    然后使用hashNext()方法判断集合中是否存在下一个元素，如果存在，
    则调用next()方法将元素取出，否则说明已到达了集合末尾，停止遍历元素。

    Iterator迭代器对象在遍历集合时，
    内部采用指针的方式来跟踪集合中的元素，
    在调用Iterator的next()方法之前，
    迭代器的索引位于第一个元素之前，不指向任何元素，
    当第一次调用迭代器的next方法后，迭代器的索引会向后移动一位，
    指向第一个元素并将该元素返回，当再次调用next方法时，
    迭代器的索引会指向第二个元素并将该元素返回，依此类推，
    直到hasNext方法返回false，表示到达了集合的末尾，
    终止对元素的遍历。
    */
}
