----------Spring----------
第一章:Spring概述
1.spring概念:
Spring 是分层的 Java SE/EE 应用 full-stack 轻量级开源框架，以 
IoC（Inverse Of Control：反转控制）和 
AOP（Aspect Oriented Programming：面向切面编程）为内核的。

EJB(Enterprise Java Bean) 是JavaEE中面向服务的体系架构的解决方案 可以将功能封装在服务器上 以服务的形式对外发布。

2.spring优势:
方便解耦，简化开发
AOP编程的支持 ------OOP注重业务逻辑单元的划分 AOP偏重业务处理国破城中的某个步骤或阶段 OOP是纵向的 AOP是横向的结构
声明式事物的支持
方便程序的测试------使用非容器依赖的编程方式
方便集成各种优秀框架
降低JavaEE API 的使用难度
Java源码是经典学习范例

3.Spring的体系结构

第二章:IoC的概念和作用
1.程序的耦合和解藕
划分模块的一个准则就是高內聚低耦合------模块内的各个元素之间要高度紧密，但是各个模块之间的相互依存度却不要那么紧密

2.解决耦合问题的思路
通过反射来注册驱动，不再依赖具体的驱动类，但是如果要修改的话还是要修改源码，所以解决的问题就是修改配置文件文件

3.工厂模式解藕
把三层的对象都是用配置文件配置起来，让一个类中的方法通过读取配置文件，把这些对象创建出来并存起来，在接下来使用的时候直接拿过来用就可以了------那么，这个读取配置文件，创建和获取三层对象的类就是工厂

4.控制反转---Inversion Of Control
1)有查找需求的用Map(称之为容器) 否则可用List
2)工厂就是负责给我们从容器中获取指定对象的类---是被动方式的(不是new 方式了)
3)作用:削减了计算机程序的耦合(解除我们代码的依赖关系)

第三章:使用Spring的IOC解决程序的耦合
前期准备
1.准备Spring开发包
2.创建业务层接口和实现类
3.创建持久层接口和实现类

基于XML的配置
1.拷贝必备的jar包到工程的lib中
2.在类的根路径下创建一个人以名称的XML文件
3.让Spring管理资源 在配置文件中配置service和dao
<bean 标签 用于让spring 创建对象 在配置文件中配置service和dao
验证过程

基于XML的IOC细节
1.BeanFactory和ApplicationContext的区别:
  BeanFactory 是顶层接口 什么时候用什么时候创建
  ApplicationContext是他的子接口 只要读取配置文件就会创建对象
2.ApplicationContext接口的实现类
  一般用ClassPathXmlApplicationContext 从类的根路径家在配置文件

IOC中bean标签和管理对象细节
1.bean标签:用于配置对象俄让spring来创建 默认情况下是午餐构造函数
  scope 指定对象的作用范围
    singleton:默认的 单例的
    prototype:多例的
2.bean的作用范围和生命周期
    singleton:一个应用只有一个对象的实例 它的作用范围就是整个引用
    prototype:每次访问对象时都会重新创建对象实例

实例化Bean的三种方式
第一种:使用默认无参构造函数
第二种:spring管理静态工厂-使用静态工厂的方法创建对象
第三种:spring管理实例工厂-使用实例工厂的方法创建对象

spring的依赖注入
1.概念:Dependency Injection 是spring框架核心ioc的具体实现 就是坐等框架把持久层对象传入业务层 而不用自己去获取
2.
  1)构造函数注入:使用类中的构造函数 给成员变量赋值 constructor-arg 
  2)set方法注入:在类中提供需要成员的set方法 ---此方法较多 property
  3)使用p名称空间注入数据
3.注入集合属性:给类中的集合成员传值
              
