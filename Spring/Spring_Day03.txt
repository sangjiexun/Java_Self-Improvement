----------Spring----------
1.事务的提交和回滚
  解决事务的一致性 控制提交和回滚
  try {

  TransactionManager.beginTransaction();

  accountDao.save(account);

  TransactionManager.commit();

  } catch (Exception e) {

  TransactionManager.rollback();

  e.printStackTrace();

  }finally {

  TransactionManager.release();

  }

  但是代码变得和冗长

2.Threadocal
  ThreadLocal的实例代表了一个线程局部的变量，每条线程都只能看到自己的值，并不会意识到其他的线程中也会存在该变量
  采用用空间换取时间的方式 解决多线程中相同变量的访问冲突问题
  数据隔离的秘诀其实是这样的，Thread有个TheadLocalMap类型的属性，叫做threadLocals，该属性用来保存该线程本地变量。这样每个线程都有自己的数据，就做到了不同线程间数据的隔离，保证了数据安全。

3.动态代理
  动态代理看起来好像是个什么高大上的名词，但其实并没有那么复杂，直接从字面就很容易理解。动态地代理，可以猜测一下它的含义，在运行时动态地对某些东西代理，代理它做了其他事情。

4.使用CGLib的Enhancer类创建代理对象
  
  































